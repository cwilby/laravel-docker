version: 2

jobs:
  build:
    docker:
      - image: 'lorisleiva/laravel-docker:latest'
    steps:
      - checkout
      - run:
          name: 'Setup test environment'
          command: |
            cp .env.example .env
            chmod -R 777 storage && chmod -R 777 public
            [ -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini ] &&
              mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.off
      - restore_cache:
          keys:
            - {% raw %}'composer-packages-{{ .Branch }}-{{ .Revision }}-'{% endraw %}
            - {% raw %}'composer-packages-{{ .Branch }}-'{% endraw %}
      - run: composer install
      - save_cache:
          key: {% raw %}'composer-packages-{{ .Branch }}-{{ .Revision }}-'{% endraw %}
          paths:
            - ~/.composer/cache
            - vendor
      - run:
          name: 'Run PHPUnit test suite'
          command: |
            mkdir -p ~/phpunit
            ./vendor/bin/phpunit --testdox --log-junit ~/phpunit/junit.xml
          when: always
      - store_test_results:
          path: ~/phpunit

  deploy_production:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - ""
      - run:
          name: Deploy to production via SSH
          command: |
            ssh \
              -t $SSH_PROD_USER@$SSH_PROD_HOST \
              'bash -i -c "cd {{APP_NAME}}/{{APP_NAME}}-rest-api && git checkout master && git pull origin master && npm run docker:production"'

workflows:
  version: 2
  build:
    jobs:
      - build
